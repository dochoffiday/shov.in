#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shovin.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShovinDB")]
	public partial class ShovinDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertShove(Shove instance);
    partial void UpdateShove(Shove instance);
    partial void DeleteShove(Shove instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    #endregion
		
		public ShovinDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShovinDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShovinDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShovinDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShovinDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShovinDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Shove> Shoves
		{
			get
			{
				return this.GetTable<Shove>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visits
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shove")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Shove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShoveID;
		
		private string _TinyUrl;
		
		private string _FullUrl;
		
		private string _Keyword;
		
		private System.DateTime _Created;
		
		private string _CreatedBy;
		
		private System.Nullable<int> _AdDiplayMilliseconds;
		
		private EntitySet<Visit> _Visits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShoveIDChanging(int value);
    partial void OnShoveIDChanged();
    partial void OnTinyUrlChanging(string value);
    partial void OnTinyUrlChanged();
    partial void OnFullUrlChanging(string value);
    partial void OnFullUrlChanged();
    partial void OnKeywordChanging(string value);
    partial void OnKeywordChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnAdDiplayMillisecondsChanging(System.Nullable<int> value);
    partial void OnAdDiplayMillisecondsChanged();
    #endregion
		
		public Shove()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoveID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ShoveID
		{
			get
			{
				return this._ShoveID;
			}
			set
			{
				if ((this._ShoveID != value))
				{
					this.OnShoveIDChanging(value);
					this.SendPropertyChanging();
					this._ShoveID = value;
					this.SendPropertyChanged("ShoveID");
					this.OnShoveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinyUrl", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TinyUrl
		{
			get
			{
				return this._TinyUrl;
			}
			set
			{
				if ((this._TinyUrl != value))
				{
					this.OnTinyUrlChanging(value);
					this.SendPropertyChanging();
					this._TinyUrl = value;
					this.SendPropertyChanged("TinyUrl");
					this.OnTinyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string FullUrl
		{
			get
			{
				return this._FullUrl;
			}
			set
			{
				if ((this._FullUrl != value))
				{
					this.OnFullUrlChanging(value);
					this.SendPropertyChanging();
					this._FullUrl = value;
					this.SendPropertyChanged("FullUrl");
					this.OnFullUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keyword", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Keyword
		{
			get
			{
				return this._Keyword;
			}
			set
			{
				if ((this._Keyword != value))
				{
					this.OnKeywordChanging(value);
					this.SendPropertyChanging();
					this._Keyword = value;
					this.SendPropertyChanged("Keyword");
					this.OnKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdDiplayMilliseconds", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> AdDiplayMilliseconds
		{
			get
			{
				return this._AdDiplayMilliseconds;
			}
			set
			{
				if ((this._AdDiplayMilliseconds != value))
				{
					this.OnAdDiplayMillisecondsChanging(value);
					this.SendPropertyChanging();
					this._AdDiplayMilliseconds = value;
					this.SendPropertyChanged("AdDiplayMilliseconds");
					this.OnAdDiplayMillisecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shove_Visit", Storage="_Visits", ThisKey="ShoveID", OtherKey="ShoveID")]
		internal EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Shove = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Shove = null;
		}
		
		private void Initialize()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visit")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VisitID;
		
		private int _ShoveID;
		
		private string _ReferrerUrl;
		
		private System.DateTime _Created;
		
		private string _CreatedBy;
		
		private EntityRef<Shove> _Shove;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitIDChanging(int value);
    partial void OnVisitIDChanged();
    partial void OnShoveIDChanging(int value);
    partial void OnShoveIDChanged();
    partial void OnReferrerUrlChanging(string value);
    partial void OnReferrerUrlChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public Visit()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoveID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ShoveID
		{
			get
			{
				return this._ShoveID;
			}
			set
			{
				if ((this._ShoveID != value))
				{
					if (this._Shove.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShoveIDChanging(value);
					this.SendPropertyChanging();
					this._ShoveID = value;
					this.SendPropertyChanged("ShoveID");
					this.OnShoveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferrerUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ReferrerUrl
		{
			get
			{
				return this._ReferrerUrl;
			}
			set
			{
				if ((this._ReferrerUrl != value))
				{
					this.OnReferrerUrlChanging(value);
					this.SendPropertyChanging();
					this._ReferrerUrl = value;
					this.SendPropertyChanged("ReferrerUrl");
					this.OnReferrerUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shove_Visit", Storage="_Shove", ThisKey="ShoveID", OtherKey="ShoveID", IsForeignKey=true)]
		internal Shove Shove
		{
			get
			{
				return this._Shove.Entity;
			}
			set
			{
				Shove previousValue = this._Shove.Entity;
				if (((previousValue != value) 
							|| (this._Shove.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shove.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Shove.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._ShoveID = value.ShoveID;
					}
					else
					{
						this._ShoveID = default(int);
					}
					this.SendPropertyChanged("Shove");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Shove = default(EntityRef<Shove>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
